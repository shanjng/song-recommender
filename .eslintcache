[{"/Users/shanjiang/Documents/Coding/vibe-check/vibe-check/src/index.js":"1","/Users/shanjiang/Documents/Coding/vibe-check/vibe-check/src/reportWebVitals.js":"2","/Users/shanjiang/Documents/Coding/vibe-check/vibe-check/src/App.js":"3","/Users/shanjiang/Documents/Coding/vibe-check/vibe-check/src/pages/LoginPage.js":"4","/Users/shanjiang/Documents/Coding/vibe-check/vibe-check/src/pages/PlaylistsPage.js":"5","/Users/shanjiang/Documents/Coding/vibe-check/vibe-check/src/pages/HomePage.js":"6","/Users/shanjiang/Documents/Coding/vibe-check/vibe-check/src/pages/NotFoundPage.js":"7","/Users/shanjiang/Documents/Coding/vibe-check/vibe-check/src/pages/RedirectPage.js":"8","/Users/shanjiang/Documents/Coding/vibe-check/vibe-check/src/components/Navbar/Navbar.js":"9","/Users/shanjiang/Documents/Coding/vibe-check/vibe-check/src/utils/functions.js":"10","/Users/shanjiang/Documents/Coding/vibe-check/vibe-check/src/utils/API.js":"11","/Users/shanjiang/Documents/Coding/vibe-check/vibe-check/src/components/Navbar/SidebarItems.js":"12","/Users/shanjiang/Documents/Coding/vibe-check/vibe-check/src/components/Sections/RecommendedSection.js":"13","/Users/shanjiang/Documents/Coding/vibe-check/vibe-check/src/components/Sections/CurrentlyPlayingSection.js":"14","/Users/shanjiang/Documents/Coding/vibe-check/vibe-check/src/components/Sections/LyricsSection.js":"15","/Users/shanjiang/Documents/Coding/vibe-check/vibe-check/src/components/Sections/MusicVideoSection.js":"16"},{"size":500,"mtime":1609123773375,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1608157155692,"results":"19","hashOfConfig":"18"},{"size":1124,"mtime":1611708714259,"results":"20","hashOfConfig":"18"},{"size":1495,"mtime":1611711907327,"results":"21","hashOfConfig":"18"},{"size":1575,"mtime":1609294318506,"results":"22","hashOfConfig":"18"},{"size":4266,"mtime":1610411327773,"results":"23","hashOfConfig":"18"},{"size":267,"mtime":1609283975913,"results":"24","hashOfConfig":"18"},{"size":579,"mtime":1611710463147,"results":"25","hashOfConfig":"18"},{"size":1834,"mtime":1609453540209,"results":"26","hashOfConfig":"18"},{"size":1502,"mtime":1609441094153,"results":"27","hashOfConfig":"18"},{"size":2185,"mtime":1609631700664,"results":"28","hashOfConfig":"18"},{"size":462,"mtime":1609292929091,"results":"29","hashOfConfig":"18"},{"size":2443,"mtime":1609900738650,"results":"30","hashOfConfig":"18"},{"size":2287,"mtime":1611712660525,"results":"31","hashOfConfig":"18"},{"size":1127,"mtime":1611708149390,"results":"32","hashOfConfig":"18"},{"size":1227,"mtime":1610411449766,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"qnen1n",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/shanjiang/Documents/Coding/vibe-check/vibe-check/src/index.js",[],["71","72"],"/Users/shanjiang/Documents/Coding/vibe-check/vibe-check/src/reportWebVitals.js",[],"/Users/shanjiang/Documents/Coding/vibe-check/vibe-check/src/App.js",["73"],"import './App.css';\nimport React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport LoginPage from './pages/LoginPage';\nimport NotFoundPage from './pages/NotFoundPage';\nimport RedirectPage from './pages/RedirectPage';\nimport PlaylistsPage from './pages/PlaylistsPage';\nimport Navbar from './components/Navbar/Navbar';\nimport './App.css';\n\nfunction App() {\n  // useEffect(() => {\n  //   console.log(window.location);\n  //   console.log('running at: ', window.location.pathname);\n  // });\n\n  return (\n    <Router>\n      <div className='App'>\n        {window.location.pathname === '/login' ? null : (\n          <Navbar className='navbar' />\n        )}\n\n        <Switch>\n          <Route exact path='/' component={HomePage} />\n          <Route path='/login' component={LoginPage} />\n          <Route path='/redirect' component={RedirectPage} />\n          <Route path='/playlists' component={PlaylistsPage} />\n          <Route component={NotFoundPage} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/shanjiang/Documents/Coding/vibe-check/vibe-check/src/pages/LoginPage.js",[],"/Users/shanjiang/Documents/Coding/vibe-check/vibe-check/src/pages/PlaylistsPage.js",[],"/Users/shanjiang/Documents/Coding/vibe-check/vibe-check/src/pages/HomePage.js",["74"],"import React, { useEffect, useState } from 'react';\nimport { isValidSession } from '../utils/functions';\nimport { getCurrentlyPlaying, getRecommendations } from '../utils/API';\nimport { useHistory } from 'react-router-dom';\nimport CurrentlyPlayingSection from '../components/Sections/CurrentlyPlayingSection';\nimport RecommendedSection from '../components/Sections/RecommendedSection';\nimport LyricsSection from '../components/Sections/LyricsSection';\nimport MusicVideoSection from '../components/Sections/MusicVideoSection';\nimport './HomePage.css';\nimport _ from 'lodash';\nimport ReactFullpage from '@fullpage/react-fullpage';\n\nconst HomePage = () => {\n  const [currentlyPlayingSong, setCurrentlyPlayingSong] = useState({\n    type: 'Now Playing',\n    name: 'No Song Playing',\n    artists: [],\n    imageUrl: '',\n  });\n  const [recommendedSong, setRecommendedSong] = useState({\n    type: 'Recommended',\n    name: '',\n    id: '',\n    artists: [],\n    imageUrl: '',\n  });\n  const [mouseIdle, setMouseIdle] = useState(false);\n  // const [firstLoaded, setFirstLoaded] = useState(false);\n  // const [secondLoaded, setSecondLoaded] = useState(false);\n  // const [thirdLoaded, setThirdLoaded] = useState(false);\n  // const sectionStates = { currentlyPlaying: firstLoaded, recommended: secondLoaded, lyrics: thirdLoaded };\n  // const setters = { currentlyPlaying: setFirstLoaded, recommended: setSecondLoaded, lyrics: setThirdLoaded };\n\n  const history = useHistory();\n\n  // useEffect(() => console.log(\"Rerendering Home Page\"));\n\n  useEffect(() => {\n    const updateSongs = async () => {\n      const isValidSessionBool = isValidSession();\n\n      if (!isValidSessionBool) {\n        history.push('/login');\n        return;\n      }\n\n      var result = await getCurrentlyPlaying();\n\n      var incomingSong = {};\n\n      if (\n        result.data === '' ||\n        result.data.currently_playing_type === 'unknown'\n      ) {\n        incomingSong = {\n          type: 'Now Playing',\n          name: 'No Song Playing',\n          artists: [],\n          imageUrl: '',\n        };\n      } else {\n        var songJSONPath = result.data.item;\n        incomingSong = {\n          type: 'Now Playing',\n          name: songJSONPath.name,\n          id: songJSONPath.id,\n          artists: songJSONPath.artists.map((artist) => artist.name + ' '),\n          imageUrl:\n            songJSONPath.album.images[songJSONPath.album.images.length - 3].url,\n        };\n      }\n\n      if (!_.isEqual(incomingSong, currentlyPlayingSong)) {\n        result = await getRecommendations(incomingSong.id);\n\n        const songJSONPath = result.data;\n\n        const incomingRecommendation = {\n          type: 'Recommended',\n          name: songJSONPath.name,\n          id: songJSONPath.id,\n          artists: songJSONPath.artists.map((artist) => artist.name + ' '),\n          imageUrl:\n            songJSONPath.album.images[songJSONPath.album.images.length - 3].url,\n        };\n\n        setCurrentlyPlayingSong(incomingSong);\n        setRecommendedSong(incomingRecommendation);\n      }\n    };\n\n    updateSongs();\n\n    const timer = setInterval(updateSongs, 1000);\n\n    return () => clearInterval(timer);\n  }, [currentlyPlayingSong, history]);\n\n  var timer;\n  const handleMouseMove = (e) => {\n    setMouseIdle(false);\n    // clear previous timer\n    if (timer) {\n      clearTimeout(timer);\n    }\n\n    timer = setTimeout(() => {\n      setMouseIdle(true);\n    }, 3000);\n  };\n\n  // const handleLoaded = name => {\n  //     if(sectionStates[name] !== true) {\n  //         setters[name](true);\n  //         if(firstLoaded === true && secondLoaded === true && thirdLoaded === true)\n  //             // window.scrollTo(0, 0);\n  //             return;\n  //     }\n  // }\n\n  return (\n    <div\n      className={'home' + (mouseIdle ? ' mouse-idle' : ' mouse-active')}\n      onMouseMove={(e) => handleMouseMove(e)}\n    >\n      <CurrentlyPlayingSection\n        className='section'\n        song={currentlyPlayingSong}\n      />\n      <RecommendedSection className='section' song={recommendedSong} />\n      <LyricsSection className='section' song={currentlyPlayingSong} />\n      <MusicVideoSection\n        className='section'\n        song={currentlyPlayingSong}\n      ></MusicVideoSection>\n    </div>\n  );\n};\n\nexport default HomePage;\n","/Users/shanjiang/Documents/Coding/vibe-check/vibe-check/src/pages/NotFoundPage.js",[],"/Users/shanjiang/Documents/Coding/vibe-check/vibe-check/src/pages/RedirectPage.js",[],"/Users/shanjiang/Documents/Coding/vibe-check/vibe-check/src/components/Navbar/Navbar.js",[],"/Users/shanjiang/Documents/Coding/vibe-check/vibe-check/src/utils/functions.js",[],"/Users/shanjiang/Documents/Coding/vibe-check/vibe-check/src/utils/API.js",[],"/Users/shanjiang/Documents/Coding/vibe-check/vibe-check/src/components/Navbar/SidebarItems.js",[],"/Users/shanjiang/Documents/Coding/vibe-check/vibe-check/src/components/Sections/RecommendedSection.js",["75"],"import React, { useState, useRef, useEffect } from 'react';\nimport { rgbToHex } from '../../utils/functions';\nimport { queueSong, queueAndPlaySong } from '../../utils/API';\nimport ColorThief from 'colorthief';\nimport * as IoIcons from 'react-icons/io';\nimport './Section.css';\n\nconst RecommendedSection = (props) => {\n  const [palette, setPalette] = useState(['black']);\n  const [imgInlineStyle, setImgInlineStyle] = useState({\n    filter: `drop-shadow(5px 5px 5px black)`,\n  });\n  const [isLoaded, setIsLoaded] = useState(false);\n  const song = props.song;\n  const type = song.type;\n\n  const myRef = useRef(null);\n\n  useEffect(() => {\n    // console.log(\"Rerender of Section \" + type)\n    // props.onLoad('recommended');\n  });\n\n  const paletteUpdate = () => {\n    const colorThief = new ColorThief();\n    const img = myRef.current;\n    const palette = colorThief.getPalette(img, 5);\n    const paletteInHex = palette.map((colorArr) => rgbToHex(...colorArr));\n    // console.log(paletteInHex)\n\n    setPalette(paletteInHex);\n    setImgInlineStyle({\n      filter: `drop-shadow(5px 5px 5px ${paletteInHex[1]})`,\n    });\n  };\n\n  const handleLoaded = () => {\n    paletteUpdate();\n    setIsLoaded(true);\n  };\n\n  return (\n    <div style={{ backgroundColor: palette[0] }} className='section'>\n      <div className='info'>\n        <p>\n          <b>{type}</b> <br />\n          {song.name === 'No Song Playing'\n            ? ''\n            : `${song.name} - ${song.artists}`}\n        </p>\n        <div className='img-wrapper'>\n          <img\n            src={song.imageUrl}\n            alt=''\n            ref={myRef}\n            crossOrigin={'anonymous'}\n            onLoad={handleLoaded}\n            style={imgInlineStyle}\n          />\n          <div className='play-button-overlay'>\n            <IoIcons.IoMdPlay\n              className='play-button-icon'\n              onClick={() => queueAndPlaySong(song.id)}\n            />\n          </div>\n        </div>\n        <div>\n          <button\n            style={{ color: 'black' }}\n            onClick={() => queueAndPlaySong(song.id)}\n          >\n            Play\n          </button>\n          <button style={{ color: 'black' }} onClick={() => queueSong(song.id)}>\n            Queue\n          </button>\n          <button style={{ color: 'black' }} onClick={() => queueSong(song.id)}>\n            Next\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RecommendedSection;\n","/Users/shanjiang/Documents/Coding/vibe-check/vibe-check/src/components/Sections/CurrentlyPlayingSection.js",["76","77"],"import React, { useState, useRef, useEffect } from 'react';\nimport { rgbToHex } from '../../utils/functions';\nimport { queueAndPlaySong } from '../../utils/API';\nimport ColorThief from 'colorthief';\nimport * as IoIcons from 'react-icons/io';\nimport * as BsIcons from 'react-icons/bs';\nimport './Section.css';\n\nconst CurrentlyPlayingSection = (props) => {\n  const [palette, setPalette] = useState(['black', 'black']);\n  const [imgInlineStyle, setImgInlineStyle] = useState({\n    filter: `drop-shadow(5px 5px 5px black)`,\n  });\n  const [isLoaded, setIsLoaded] = useState(false);\n  const song = props.song;\n  const type = song.type;\n\n  const myRef = useRef(null);\n\n  useEffect(() => {\n    // console.log(\"Rerender of Section \" + type)\n  });\n\n  useEffect(() => {\n    // props.onLoad('currentlyPlaying');\n  }, []);\n\n  const paletteUpdate = () => {\n    const colorThief = new ColorThief();\n    const img = myRef.current;\n    const palette = colorThief.getPalette(img, 5);\n    const paletteInHex = palette.map((colorArr) => rgbToHex(...colorArr));\n\n    setPalette(paletteInHex);\n    setImgInlineStyle({\n      filter: `drop-shadow(5px 5px 5px ${paletteInHex[1]})`,\n    });\n  };\n\n  const handleLoaded = () => {\n    paletteUpdate();\n    setIsLoaded(true);\n  };\n\n  return (\n    <div style={{ backgroundColor: palette[0] }} className='section'>\n      {/* <div className='arrow'>\n        <BsIcons.BsChevronLeft></BsIcons.BsChevronLeft>\n      </div> */}\n      <div className='info'>\n        <p>\n          <b>{type}</b> <br />\n          {song.name === 'No Song Playing'\n            ? ''\n            : `${song.name} - ${song.artists}`}\n        </p>\n        <div className='img-wrapper'>\n          <img\n            src={song.imageUrl}\n            alt=''\n            ref={myRef}\n            crossOrigin={'anonymous'}\n            onLoad={handleLoaded}\n            style={imgInlineStyle}\n          />\n          <div className='play-button-overlay'>\n            <IoIcons.IoMdPlay\n              className='play-button-icon'\n              onClick={() => queueAndPlaySong(song.id)}\n            />\n          </div>\n        </div>\n      </div>\n      {/* <div className='arrow'>\n        <BsIcons.BsChevronRight></BsIcons.BsChevronRight>\n      </div> */}\n    </div>\n  );\n};\n\nexport default CurrentlyPlayingSection;\n","/Users/shanjiang/Documents/Coding/vibe-check/vibe-check/src/components/Sections/LyricsSection.js",[],"/Users/shanjiang/Documents/Coding/vibe-check/vibe-check/src/components/Sections/MusicVideoSection.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":2,"column":17,"nodeType":"84","messageId":"85","endLine":2,"endColumn":26},{"ruleId":"82","severity":1,"message":"86","line":11,"column":8,"nodeType":"84","messageId":"85","endLine":11,"endColumn":21},{"ruleId":"82","severity":1,"message":"87","line":13,"column":10,"nodeType":"84","messageId":"85","endLine":13,"endColumn":18},{"ruleId":"82","severity":1,"message":"88","line":6,"column":13,"nodeType":"84","messageId":"85","endLine":6,"endColumn":20},{"ruleId":"82","severity":1,"message":"87","line":14,"column":10,"nodeType":"84","messageId":"85","endLine":14,"endColumn":18},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'ReactFullpage' is defined but never used.","'isLoaded' is assigned a value but never used.","'BsIcons' is defined but never used.","no-global-assign","no-unsafe-negation"]